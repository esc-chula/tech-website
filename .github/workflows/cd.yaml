name: CD - Deploy to Kubernetes

on:
  workflow_dispatch:
  workflow_run:
    workflows: ['CI - Build and Push Docker Image', 'Release']
    types:
      - completed

env:
  GITOPS_REPO: esc-chula/tech-website-gitops
  PROD_DEPLOYMENT_PATH: overlays/prod/kustomization.yaml
  STAGING_DEPLOYMENT_PATH: overlays/staging/kustomization.yaml
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write

    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Determine Deployment Environment
        id: determine-env
        run: |
          if [[ "${{ github.event.workflow_run.name }}" == "Release" ]]; then
            echo "DEPLOYMENT_PATH=${{ env.PROD_DEPLOYMENT_PATH }}" >> "$GITHUB_ENV"
            echo "DEPLOY_TYPE=minor" >> "$GITHUB_ENV"
            echo "USE_SHA=false" >> "$GITHUB_ENV"
          elif [[ "${{ github.event.workflow_run.name }}" == "CI - Build and Push Docker Image" ]]; then
            echo "DEPLOYMENT_PATH=${{ env.STAGING_DEPLOYMENT_PATH }}" >> "$GITHUB_ENV"
            echo "DEPLOY_TYPE=patch" >> "$GITHUB_ENV"
            echo "USE_SHA=true" >> "$GITHUB_ENV"
          fi

      - name: Read Release Tag from Artifact
        id: get-release-tag
        run: |
          VERSION="$(cat release_tag.txt)"
          echo "RELEASE_TAG=${VERSION#v}" >> "$GITHUB_ENV"

      - name: Checkout GitOps repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.GITOPS_REPO }}
          token: ${{ secrets.GITOPS_TOKEN }}
          path: gitops

      - name: Download Image Tag Artifact
        if: env.USE_SHA == 'false'
        uses: dawidd6/action-download-artifact@v8
        with:
          workflow: ${{ github.event.workflow_run.name }}.yaml
          workflow_conclusion: success
          name: release-tag # Changed from image-tag to release-tag for Release workflow
          path: .

      - name: Download Image SHA Artifact (for Staging)
        if: env.USE_SHA == 'true'
        uses: dawidd6/action-download-artifact@v8
        with:
          workflow: ${{ github.event.workflow_run.name }}.yaml
          workflow_conclusion: success
          name: image-sha
          path: .

      - name: Read Image Tag from Artifact
        id: get-image-tag
        run: |
          RAW_TAG=$(cat release_tag.txt)  # Changed from image_tag.txt to release_tag.txt for Release workflow
          # Remove 'v' prefix if the tag matches vX.X.X format
          if [[ $RAW_TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            PROCESSED_TAG="${RAW_TAG#v}"
          else
            PROCESSED_TAG="$RAW_TAG"
          fi
          echo "IMAGE_TAG=$PROCESSED_TAG" >> "$GITHUB_ENV"
      - name: Read Image SHA from Artifact (for Staging)
        if: env.USE_SHA == 'true'
        run: echo "IMAGE_TAG=$(cat image_sha.txt)" >> "$GITHUB_ENV"

      - name: Update Image Tag in GitOps Repository
        run: |
          DEPLOYMENT_PATH="gitops/${{ env.DEPLOYMENT_PATH }}"

          # Update the `newTag` field inside `images` list
          yq -i '(.images[] | select(.name == "tech-website")).newTag = "${{ env.IMAGE_TAG }}"' "$DEPLOYMENT_PATH"

          # Update the patch for the container image in the `Deployment`
          yq -i '(.patches[] | select(.target.kind == "Deployment" and .target.name == "tech-website")).patch |= sub("value:.*", "value: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}")' "$DEPLOYMENT_PATH"

      - name: Commit and Push Changes to GitOps Repo
        run: |
          cd gitops
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "build(deploy): Update ${{ env.DEPLOYMENT_PATH }} for ${{ env.IMAGE_TAG }} (type: ${{ env.DEPLOY_TYPE }})"
          git push
