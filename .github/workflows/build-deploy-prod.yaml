name: Build Deploy Production

on:
  workflow_dispatch:
  push:
    branches:
      - main
  release:
    types: [created]

env:
  GITOPS_REPO: esc-chula/tech-website-gitops
  PROD_DEPLOYMENT_PATH: overlays/prod/kustomization.yaml
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  build-check:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker Image (No Push)
        uses: docker/build-push-action@v3
        with:
          file: Dockerfile
          push: false
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache

  release-build-deploy:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Process Release Version
        id: version
        run: |
          RAW_TAG=${{ github.event.release.tag_name }}
          if [[ $RAW_TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            PROCESSED_TAG="${RAW_TAG#v}"
          else
            PROCESSED_TAG="$RAW_TAG"
          fi
          echo "VERSION=$PROCESSED_TAG" >> "$GITHUB_OUTPUT"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Release Image
        uses: docker/build-push-action@v3
        with:
          file: Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ steps.version.outputs.VERSION }}
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max

      - name: Checkout GitOps Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.GITOPS_REPO }}
          token: ${{ secrets.GITOPS_TOKEN }}
          path: gitops

      - name: Update Image Tag in GitOps Repository
        env:
          IMAGE_TAG: ${{ steps.version.outputs.VERSION }}
        run: |
          DEPLOYMENT_PATH="gitops/${{ env.PROD_DEPLOYMENT_PATH }}"

          # Update the `newTag` field inside `images` list
          yq -i '(.images[] | select(.name == "ghcr.io/esc-chula/tech-website")).newTag = "${{ env.IMAGE_TAG }}"' "$DEPLOYMENT_PATH"

      - name: Commit and Push Changes to GitOps Repo
        run: |
          cd gitops
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "build(deploy): Update production deployment for ${{ steps.version.outputs.VERSION }}"
          git push
