name: Release

on:
  workflow_dispatch:
    inputs:
      target:
        required: true
        description: New tag (e.g., v1.2.3)

jobs:
  release_commit:
    name: Release Commit
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          filter: 'blob:none'
          fetch-depth: 0

      - name: Generate a Changelog
        uses: orhun/git-cliff-action@v3
        with:
          config: cliff.toml
          args: '--verbose --tag ${{ github.event.inputs.target }}'
        env:
          OUTPUT: CHANGELOG.md
          GITHUB_REPO: ${{ github.repository }}

      - name: Update package.json Version
        run: |
          # Remove 'v' prefix for package.json version
          VERSION="${{ github.event.inputs.target }}"
          VERSION="${VERSION#v}"
          PACKAGEJSON=$(jq --indent 2 ".version = \"$VERSION\"" package.json)
          echo "$PACKAGEJSON" > package.json

      - name: Commit Release
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'chore(release): prepare for ${{ github.event.inputs.target }}'

      - name: Save Release Tag as Artifact
        run: echo "${{ github.event.inputs.target }}" > release_tag.txt

      - name: Upload Release Tag Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-tag # Changed from image-tag to release-tag for clarity
          path: release_tag.txt
  release_github:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: release_commit

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Generate a Changelog for Release
        uses: orhun/git-cliff-action@v3
        id: git-cliff
        with:
          config: cliff.toml
          args: --verbose --unreleased --strip all --tag ${{ github.event.inputs.target }}
        env:
          OUTPUT: CHANGES.md
          GITHUB_REPO: ${{ github.repository }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: CHANGES.md
          tag_name: ${{ github.event.inputs.target }}
          generate_release_notes: true
