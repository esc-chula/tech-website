name: CI - Build and Push Docker Image

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop
  workflow_run:
    workflows: ['Release']
    types:
      - completed

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Default Image Tag
        id: set-default-tag
        env:
          REPOSITORY: ${{ github.repository }}
          SHA: ${{ github.sha }}
        run: |
          echo "IMAGE_NAME=ghcr.io/${REPOSITORY@L}" >> "$GITHUB_ENV"
          echo "IMAGE_TAG=latest" >> "$GITHUB_ENV"  # Default to 'latest'
          echo "SHA_TAG=$SHA" >> "$GITHUB_ENV"     # Save SHA separately

      - name: Download Release Tag Artifact (if triggered by Release)
        if: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.name == 'Release' }}
        uses: dawidd6/action-download-artifact@v8
        with:
          workflow: Release.yaml
          workflow_conclusion: success
          name: release-tag
          path: .

      - name: Use Release Tag (if available)
        if: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.name == 'Release' }}
        run: echo "IMAGE_TAG=$(cat release_tag.txt)" >> "$GITHUB_ENV"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3
        with:
          file: Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}  # Only Release tag or 'latest'
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max

      - name: Save Image Tag and SHA as Artifact
        run: |
          echo "${{ env.SHA_TAG }}" > image_sha.txt
          echo "${{ env.IMAGE_TAG }}" > image_tag.txt

      - name: Upload Image Tag Artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-tag
          path: image_tag.txt

      - name: Upload Image SHA Artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-sha
          path: image_sha.txt
